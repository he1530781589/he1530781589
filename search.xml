<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Typora集成PicGo，让Markdown起飞</title>
      <link href="/he1530781589/2020/05/17/typora-ji-cheng-picgo-rang-markdown-qi-fei/"/>
      <url>/he1530781589/2020/05/17/typora-ji-cheng-picgo-rang-markdown-qi-fei/</url>
      
        <content type="html"><![CDATA[<p><img src="http://qagmyq0a8.bkt.clouddn.com/20200517195636.png" alt="img"></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li>hexo配合markdown遇到的问题:<ul><li>自带的<code>{ asset_path slug }</code>,图片虽然可以查看,但是markdown编辑器却无法预览</li><li><code>img</code>标签无法使用hexo的相对路径,文章后期位置调整很麻烦</li><li>网络图片链接变更后,自己的文章图片将会失效</li></ul></li><li>解决方案:<ul><li>使用PicGo图床上传图片</li><li>配置github、七牛云等图床简历存储仓库</li><li>使用Typora整合PicGo简化图片上传步骤</li></ul></li></ul><h2 id="PicGo简介"><a href="#PicGo简介" class="headerlink" title="PicGo简介"></a>PicGo简介</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>一个用于快速上传图片并获取图片URL链接的工具</p><p><img src="http://qagmyq0a8.bkt.clouddn.com/20200517201906.gif" alt="img"></p><h3 id="文档地址"><a href="#文档地址" class="headerlink" title="文档地址"></a>文档地址</h3><p>[<a href="https://picgo.github.io/PicGo-Doc/zh/guide/" target="_blank" rel="noopener">文档地址</a>]</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>[<a href="https://github.com/Molunerfinn/PicGo/releases">下载地址</a>]</p><h3 id="配置github图床"><a href="#配置github图床" class="headerlink" title="配置github图床"></a>配置github图床</h3><h4 id="1-创建github仓库"><a href="#1-创建github仓库" class="headerlink" title="1.创建github仓库"></a>1.创建github仓库</h4><p><img src="http://qagmyq0a8.bkt.clouddn.com/20200517202734.png" alt="image-20200517202728000"></p><h4 id="2-配置token"><a href="#2-配置token" class="headerlink" title="2.配置token"></a>2.配置token</h4><p>进入github配置token页面:<a href="https://github.com/settings/tokens">创建token</a></p><p><strong>注意:</strong>保存token到自己的文件中,token只会展示一次</p><p><img src="http://qagmyq0a8.bkt.clouddn.com/20200517203049.png" alt="image-20200517203047190"></p><h4 id="3-配置GitHub图床"><a href="#3-配置GitHub图床" class="headerlink" title="3.配置GitHub图床"></a>3.配置GitHub图床</h4><p><img src="http://qagmyq0a8.bkt.clouddn.com/20200517211556.png" alt="image-20200517203244899"></p><ul><li>仓库名称配置为:账号/仓库名</li><li>分之名称填写master</li><li>token配置为刚才设置的token</li><li>其他默认不填写</li></ul><p>配置好后就可以上传了,上传后可以复制链接到Markdown中使用</p><h3 id="配置七牛云图床"><a href="#配置七牛云图床" class="headerlink" title="配置七牛云图床"></a>配置七牛云图床</h3><p>github图床虽然已经配置好,但是因为github服务器在国外,所以访问和上传都很慢,所以使用国内的七牛云是个不错的选择,七牛云有免费的10G空间,对于博客创作者还是非常友好的.</p><h4 id="1-注册七牛云账号"><a href="#1-注册七牛云账号" class="headerlink" title="1.注册七牛云账号"></a>1.注册七牛云账号</h4><p>七牛云注册地址:<a href="https://portal.qiniu.com/signup?code=1hlfv5f8efqdu" target="_blank" rel="noopener">注册七牛云</a></p><h4 id="2-创建空间"><a href="#2-创建空间" class="headerlink" title="2.创建空间"></a>2.创建空间</h4><p>点击管理控制台 -&gt; 对象存储 -&gt; 空间管理 -&gt; 新建空间</p><p><img src="http://qagmyq0a8.bkt.clouddn.com/20200517204848.png" alt="image-20200517204842963"></p><ul><li>指定空间名称</li><li>区域选择离自己近的</li><li>访问控制一定要选择公开,不然picgo无法访问</li></ul><h4 id="3-自定义域名"><a href="#3-自定义域名" class="headerlink" title="3.自定义域名"></a>3.自定义域名</h4><p>七牛的默认域名只有30天有效期,如果要长期使用,则需要自定义域名.</p><h4 id="4-配置七牛云图床"><a href="#4-配置七牛云图床" class="headerlink" title="4.配置七牛云图床"></a>4.配置七牛云图床</h4><p><img src="http://qagmyq0a8.bkt.clouddn.com/20200517205016.png" alt="image-20200517205006616"></p><ul><li>AccessKey(AK)和SecretKey(SK)在个人中心 -&gt; 密钥管理 ,没有则创建</li></ul><p><img src="http://qagmyq0a8.bkt.clouddn.com/20200517205512.png" alt="image-20200517205204055"></p><ul><li>设定存储空间,为最初创建的空间名称</li><li>访问地址为七牛云分配的外链域名</li><li><strong>注意:配置时域名前要添加http://</strong></li></ul><p><img src="http://qagmyq0a8.bkt.clouddn.com/20200517205507.png" alt="image-20200517205501180"></p><ul><li>确认存储区域</li></ul><table><thead><tr><th align="left">存储区域</th><th align="left">地域简称</th><th align="left">上传域名</th></tr></thead><tbody><tr><td align="left">华东</td><td align="left">z0</td><td align="left">服务器端上传：<code>http(s)://up.qiniup.com</code> 客户端上传： <code>http(s)://upload.qiniup.com</code></td></tr><tr><td align="left">华北</td><td align="left">z1</td><td align="left">服务器端上传：<code>http(s)://up-z1.qiniup.com</code> 客户端上传：<code>http(s)://upload-z1.qiniup.com</code></td></tr><tr><td align="left">华南</td><td align="left">z2</td><td align="left">服务器端上传：<code>http(s)://up-z2.qiniup.com</code> 客户端上传：<code>http(s)://upload-z2.qiniup.com</code></td></tr><tr><td align="left">北美</td><td align="left">na0</td><td align="left">服务器端上传：<code>http(s)://up-na0.qiniup.com</code> 客户端上传：<code>http(s)://upload-na0.qiniup.com</code></td></tr><tr><td align="left">东南亚</td><td align="left">as0</td><td align="left">服务器端上传：<code>http(s)://up-as0.qiniup.com</code> 客户端上传：<code>http(s)://upload-as0.qiniup.com</code></td></tr></tbody></table><p>配置好后就可以上传了</p><h2 id="Typora整合PicGo"><a href="#Typora整合PicGo" class="headerlink" title="Typora整合PicGo"></a>Typora整合PicGo</h2><h3 id="整合PicGo"><a href="#整合PicGo" class="headerlink" title="整合PicGo"></a>整合PicGo</h3><h4 id="打开Typora的偏好设置"><a href="#打开Typora的偏好设置" class="headerlink" title="打开Typora的偏好设置"></a>打开Typora的偏好设置</h4><img src="http://qagmyq0a8.bkt.clouddn.com/20200517210454.png" alt="image-20200517210415548" style="zoom: 50%;" /><h4 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h4><p>选择图像 -&gt; 上传服务设定 -&gt; 选择PicGo.app -&gt; 验证图片上传选项 </p><img src="http://qagmyq0a8.bkt.clouddn.com/20200517211116.png" alt="image-20200517210646898" style="zoom:50%;" /><h3 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h3><p>配置好后就可以直接上传图片了,将图片拷贝到Typora中,选中图片右键上传,图片就直接上传到PicGo的图床上了,上传后图片链接会自动更换</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>了解了PicGo的使用方法</li><li>使用Typora + PicGo上传图片,简化了图片的维护工作</li><li>国内使用七牛云会比github要好</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo插入图片</title>
      <link href="/he1530781589/2020/05/14/hexo-cha-ru-tu-pian/"/>
      <url>/he1530781589/2020/05/14/hexo-cha-ru-tu-pian/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo插入图片"><a href="#hexo插入图片" class="headerlink" title="hexo插入图片"></a>hexo插入图片</h1><h2 id="插入本地图片"><a href="#插入本地图片" class="headerlink" title="插入本地图片"></a>插入本地图片</h2><h3 id="文章资源文件夹"><a href="#文章资源文件夹" class="headerlink" title="文章资源文件夹"></a>文章资源文件夹</h3><p>对于那些想要更有规律地提供图片和其他资源以及想要将他们的资源分布在各个文章上的人来说，Hexo也提供了更组织化的方式来管理资源。这个稍微有些复杂但是管理资源非常方便的功能可以通过将 <code>config.yml</code> 文件中的 <code>post_asset_folder</code> 选项设为 <code>true</code> 来打开。</p><pre class=" language-_config.yml"><code class="language-_config.yml">post_asset_folder: true</code></pre><p>当资源文件管理功能打开后，Hexo将会在你每一次通过 <code>hexo new [layout] &lt;title&gt;</code> 命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个文章文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。</p><h3 id="相对路径引用的标签插件"><a href="#相对路径引用的标签插件" class="headerlink" title="相对路径引用的标签插件"></a>相对路径引用的标签插件</h3><p>通过常规的 markdown 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页上显示不正确。在Hexo 2时代，社区创建了很多插件来解决这个问题。但是，随着Hexo 3 的发布，许多新的标签插件被加入到了核心代码中。这使得你可以更简单地在文章中引用你的资源。</p><pre><code>{% asset_path slug %}{% asset_img slug [title] %}{% asset_link slug [title] %}</code></pre><p>比如说：当你打开文章资源文件夹功能后，你把一个 example.jpg 图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法 <code>![](/example.jpg)</code> ，它将 不会 出现在首页上。（但是它会在文章中按你期待的方式工作）正确的引用图片方式是使用下列的标签插件而不是 markdown ：</p><pre><code>{% asset_img example.jpg This is an example image %}</code></pre><p>通过这种方式，图片将会同时出现在文章和主页以及归档页中。</p><h2 id="插入网络图片"><a href="#插入网络图片" class="headerlink" title="插入网络图片"></a>插入网络图片</h2><pre><code>{% img http://example.jpg 100 100 %}</code></pre><blockquote><p>例子</p></blockquote><img src="http://inews.gtimg.com/newsapp_bt/0/11408905496/1000/0" class="" width="100" height="100"><h2 id="图片大小控制"><a href="#图片大小控制" class="headerlink" title="图片大小控制"></a>图片大小控制</h2><p>通过标签后的数字来控制图片宽高</p><pre><code>{% asset_img example.jpg This is an example image 100 100 %}</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用hexo搭建个人博客</title>
      <link href="/he1530781589/2020/05/13/shi-yong-hexo-da-jian-ge-ren-bo-ke/"/>
      <url>/he1530781589/2020/05/13/shi-yong-hexo-da-jian-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="使用hexo搭建个人博客页面"><a href="#使用hexo搭建个人博客页面" class="headerlink" title="使用hexo搭建个人博客页面"></a>使用hexo搭建个人博客页面</h1><h2 id="img"><a href="#img" class="headerlink" title="img"></a>img</h2><h3 id="普通插入方式"><a href="#普通插入方式" class="headerlink" title="普通插入方式"></a>普通插入方式</h3><img src="/he1530781589/2020/05/13/shi-yong-hexo-da-jian-ge-ren-bo-ke/11.png" class="" title="这是一张图片 100 100"><h3 id="html普通插入方式"><a href="#html普通插入方式" class="headerlink" title="html普通插入方式"></a>html普通插入方式</h3><img src="./11.png" width = "300" height = "200" alt="图片名称"/><h3 id="引入外部图片"><a href="#引入外部图片" class="headerlink" title="引入外部图片"></a>引入外部图片</h3><img src="http://inews.gtimg.com/newsapp_bt/0/11408905496/1000/0" class="" width="100" height="100"><h2 id="sql"><a href="#sql" class="headerlink" title="sql"></a>sql</h2><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> msys_user</code></pre><h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"hello word"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h2 id="html"><a href="#html" class="headerlink" title="html"></a>html</h2><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>hello word<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="javascript"><a href="#javascript" class="headerlink" title="javascript"></a>javascript</h3><pre class=" language-javascript"><code class="language-javascript">    <span class="token keyword">function</span> <span class="token function">hello</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>    <span class="token punctuation">}</span>   </code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
